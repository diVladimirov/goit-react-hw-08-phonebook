{"version":3,"file":"static/js/contacts-page.ff23bd84.chunk.js","mappings":"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","sources":["components/Contacts/Form/ContactsForm.js","components/Contacts/ListItem/ContactsListLi.js","components/Contacts/List/ContactsList.js","components/Contacts/Filter/ContactsFilter.js","components/Modal/Modal.js","pages/ContactsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactOperations from '../../../redux/contacts/contactsOperations';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.contacts.items);\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const nameToAdd = items.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    // console.log(nameToAdd);\n    if (nameToAdd) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(contactOperations.createNewContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>AddForm</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Input name\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Input number\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactsForm;\n","import { useDispatch } from 'react-redux';\nimport contactsOpearations from '../../../redux/contacts/contactsOperations';\nimport { openModal } from 'redux/contacts/contactsReducers';\n\nconst ContactsListLi = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li key={id}>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button type=\"button\" onClick={() => dispatch(openModal(id))}>\n        Edit contact\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(contactsOpearations.deleteContact(id))}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsListLi;\n","import { useSelector } from 'react-redux';\nimport ContactsListLi from '../ListItem/ContactsListLi';\n\nconst ContactsList = () => {\n  const items = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <div>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactsListLi key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/contacts/contactsReducers';\n\nimport { Box, TextField } from '@mui/material';\n\nconst ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(updateFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Box component=\"form\">\n      <TextField\n        type=\"text\"\n        name=\"filter\"\n        label=\"Type name to find\"\n        variant=\"outlined\"\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n\nexport default ContactsFilter;\n","import { createPortal } from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport contactsOperations from '../../redux/contacts/contactsOperations';\nimport { closeModal } from 'redux/contacts/contactsReducers';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = () => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const editContact = useSelector(state => state.contacts.editContact);\n\n  useEffect(() => {\n    setId(editContact[0].id);\n    setName(editContact[0].name);\n    setNumber(editContact[0].number);\n  }, [editContact]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(contactsOperations.updateContact({ id, name, number }));\n    dispatch(closeModal());\n  };\n\n  return createPortal(\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              value={name}\n              onChange={handleChange}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              value={number}\n              onChange={handleChange}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Save</button>\n          <button type=\"button\" onClick={() => dispatch(closeModal())}>\n            Close\n          </button>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useSelector } from 'react-redux';\nimport ContactsForm from 'components/Contacts/Form/ContactsForm';\nimport ContactsList from 'components/Contacts/List/ContactsList';\nimport ContactsFilter from 'components/Contacts/Filter/ContactsFilter';\nimport Modal from 'components/Modal/Modal';\n\nconst ContactsPage = () => {\n  const showModal = useSelector(state => state.contacts.showModal);\n  return (\n    <>\n      <div>\n        <h1>ContactsPage</h1>\n        <ContactsFilter />\n        <ContactsList />\n        <ContactsForm />\n      </div>\n      {showModal && <Modal />}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["useState","name","setName","number","setNumber","dispatch","useDispatch","items","useSelector","state","contacts","useEffect","contactOperations","handleChange","target","value","onSubmit","event","preventDefault","find","contact","toLowerCase","alert","type","onChange","pattern","title","placeholder","required","id","onClick","openModal","contactsOpearations","filter","filteredContacts","includes","map","Box","component","TextField","label","variant","updateFilter","currentTarget","modalRoot","document","querySelector","setId","editContact","createPortal","contactsOperations","closeModal","showModal"],"sourceRoot":""}